{"version":3,"sources":["registerServiceWorker.js","components/App.js","AppContainer.js","user-action.js","user-type.js","components/User.js","components/Root.js","user-reducer.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","App","props","nama","alamat","users","formStatus","handleFormSubmit","bind","onInputChange","deleteUser","that","this","axios","get","response","getAllUsers","data","setState","nextProps","e","userId","preventDefault","delete","a","length","id","splice","target","name","value","uLength","lastId","post","saveUser","className","map","user","i","key","href","onClick","Link","to","colSpan","onSubmit","type","placeholder","onChange","Component","protoTypes","PropTypes","object","func","connect","dispatch","addNewUser","fetchAllUsers","usersleft","User","formSuccess","put","params","Root","store","Route","exact","path","component","AppContainer","userReducer","action","res","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.409bc656.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../app-style.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nama: '',\r\n      alamat: '',\r\n      users: [],\r\n      formStatus: true\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n  }\r\n\r\n  componentWillMount () {\r\n    let that = this;\r\n    axios.get('http://localhost:4000/users/')\r\n    .then(function (response) {\r\n      that.props.getAllUsers(response.data);\r\n      that.setState({\r\n        users: response.data\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    if (nextProps.users !== this.state.users) {\r\n      this.setState({\r\n        users: nextProps.users\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteUser (e, userId) {\r\n    e.preventDefault();\r\n    let that = this;\r\n    axios.delete('http://localhost:4000/users/' + userId)\r\n    .then(function(response){\r\n      let users = that.state.users;\r\n      for (let a=0; a<users.length; a++) {\r\n        if (userId === users[a].id) {\r\n          users.splice(a, 1);\r\n        }\r\n      }\r\n      that.props.deleteUser(users);\r\n    })\r\n    .catch(function(error){\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  onInputChange (e) {\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value; \r\n    this.setState(state);\r\n  }\r\n\r\n  handleFormSubmit (e) {\r\n    e.preventDefault();\r\n    let that = this;\r\n    if (this.state.nama && this.state.alamat) {\r\n      let uLength = that.state.users.length;\r\n      let lastId  = uLength === 0 ? 0 : that.state.users[uLength-1].id;\r\n      axios.post('http://localhost:4000/users/', {\r\n        id: this.state.users.length > 0 ? (lastId + 1) : 1, \r\n        nama: this.state.nama,\r\n        alamat: this.state.alamat\r\n      })\r\n      .then(function (response) {\r\n        that.props.saveUser(response.data);\r\n        that.setState({\r\n          nama: '',\r\n          alamat: ''\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      });\r\n    } else {\r\n      that.setState({\r\n        formStatus: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nama, alamat } = this.state;\r\n    let that = this;\r\n    return (\r\n      <div className=\"container\">\r\n        <table id=\"users\">\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Nama</th>\r\n              <th>Alamat</th>\r\n              <th>Aksi</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { \r\n              this.state.users.length > 0\r\n              ? this.state.users.map(function(user, i){\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.nama}</td>\r\n                    <td>{user.alamat}</td>\r\n                    <td>\r\n                      <a href=\"/\" onClick={ (e) => that.deleteUser(e, user.id) }> Hapus </a>\r\n                      {' | '}\r\n                      <Link to={`/edit/${user.id}`}> Edit </Link>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n              : <tr><td colSpan=\"4\">Belum ada user</td></tr>\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <h3>Input data user baru</h3>\r\n          <form onSubmit={this.handleFormSubmit}>\r\n            <input type=\"text\" name=\"nama\" value={nama} placeholder=\"Nama\" onChange={this.onInputChange} />\r\n            <br/>\r\n            <textarea name=\"alamat\" value={alamat} placeholder=\"Alamat\" onChange={this.onInputChange} ></textarea>\r\n            <br/>\r\n            <input type=\"submit\" value=\"Simpan\" />\r\n          </form>\r\n        </div>\r\n        { !this.state.formStatus && <div className=\"warning-message\">Form tidak boleh kosong</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.protoTypes = {\r\n    users: PropTypes.object,\r\n    saveUser: PropTypes.func,\r\n    getAllUsers: PropTypes.func,\r\n    deleteUser: PropTypes.func\r\n}\r\n\r\nexport default App\r\n","import { connect } from 'react-redux';\r\nimport App from './components/App';\r\nimport { addNewUser, fetchAllUsers, deleteUser } from './user-action';\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state\r\n})\r\n\r\nconst mapActionToProps = dispatch => ({\r\n    saveUser: user => dispatch(addNewUser(user)),\r\n    getAllUsers: users => dispatch(fetchAllUsers(users)),\r\n    deleteUser: usersleft => dispatch(deleteUser(usersleft))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(App)\r\n","import { ADD_USER, FETCH_USERS, DELETE_USER, GET_AN_USER, UPDATE_AN_USER } from './user-type'; \r\n\r\nexport const addNewUser = (user) => ({\r\n    type: ADD_USER,\r\n    data: user\r\n})\r\n\r\nexport const fetchAllUsers = (users) => ({\r\n    type: FETCH_USERS,\r\n    data: users\r\n})\r\n\r\nexport const deleteUser = (usersleft) => ({\r\n    type: DELETE_USER,\r\n    data: usersleft\r\n})\r\n\r\nexport const getAnUser = () => ({\r\n    type: GET_AN_USER\r\n})\r\n\r\nexport const updateAnUser = (updatedUser) => ({\r\n    type: UPDATE_AN_USER,\r\n    data: updatedUser\r\n})","export const ADD_USER = 'ADD_USER';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const GET_AN_USER = 'GET_AN_USER';\r\nexport const UPDATE_AN_USER = 'UPDATE_AN_USER';","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAnUser, updateAnUser } from '../user-action';\r\n\r\nclass User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            nama: '',\r\n            alamat: '',\r\n            user: '',\r\n            formStatus: true,\r\n            formSuccess: false\r\n        }\r\n\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    }\r\n\r\n    handleFormSubmit (e) {\r\n        e.preventDefault();\r\n        let that = this;\r\n        if (this.state.nama && this.state.alamat) {\r\n            axios.put('http://localhost:4000/users/' + this.state.id, {\r\n                nama: this.state.nama,\r\n                alamat: this.state.alamat\r\n            })\r\n            .then(function (response) {\r\n                that.setState({\r\n                    formSuccess: true\r\n                });\r\n                that.props.dispatch(updateAnUser(response.data));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n        } else {\r\n            that.setState({\r\n                formStatus: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        let that = this;\r\n        axios.get('http://localhost:4000/users/' + this.props.match.params.userId)\r\n        .then(function (response) {\r\n            that.setState({\r\n                id: response.data.id,\r\n                nama: response.data.nama,\r\n                alamat: response.data.alamat,\r\n                user: {\r\n                    nama: response.data.nama,\r\n                    alamat: response.data.alamat\r\n                }\r\n            });\r\n            that.props.dispatch(getAnUser());\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onInputChange (e) {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value; \r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        const { nama, alamat } = this.state;\r\n        return (\r\n            <div>\r\n                <h3>Edit data user</h3>\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <input type=\"text\" name=\"nama\" value={nama} placeholder=\"Nama\" onChange={this.onInputChange} />\r\n                    <br/>\r\n                    <textarea name=\"alamat\" value={alamat} placeholder=\"Alamat\" onChange={this.onInputChange} ></textarea>\r\n                    <br/>\r\n                    <input type=\"submit\" value=\"Simpan\" />\r\n                </form>\r\n                { this.state.formSuccess && <div className=\"success-message\">Data berhasil diubah. Ingin <Link to='/'> kembali </Link>?</div> }\r\n                { !this.state.formStatus && <div className=\"warning-message\">Form tidak boleh kosong</div> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(User);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppContainer from '../AppContainer';\r\nimport User from './User';\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n        <div>\r\n            <Route exact path=\"/\" component={AppContainer} />\r\n            <Route path=\"/edit/:userId?\" component={User} />\r\n        </div>\r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Root","import { ADD_USER, FETCH_USERS, DELETE_USER, UPDATE_AN_USER } from './user-type';\r\n\r\nconst userReducer = (state = [], action) => {\r\n    console.log('action : ', action);\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            return [\r\n                ...state,\r\n                action.data\r\n            ]\r\n        case DELETE_USER:\r\n            let usersleft = action.data\r\n            let res = usersleft.map(function(user){\r\n                return {\r\n                    id: user.id,\r\n                    nama: user.nama,\r\n                    alamat: user.alamat\r\n                }\r\n            })\r\n            return res\r\n        case FETCH_USERS:\r\n            return action.data\r\n        case UPDATE_AN_USER: \r\n            return [\r\n                ...state,\r\n                action.data\r\n            ]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { createStore } from 'redux';\r\nimport Root from './components/Root';\r\nimport userReducer from './user-reducer.js';\r\n\r\nconst store = createStore(userReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n    <Root store={store} />, \r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}